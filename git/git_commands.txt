###############################
### Créer un repository Git ###
###############################

# Initialiser Git
git init

# Ajouter à l'index des fichiers
git add .
git add file1 file2

# Ajouter à l'index tous les fichiers modifiés
git add -u 

# Commit (et ajoute à l'index) tous les fichiers modifiés (ne fait rien par rapport aux nouveaux fichiers)
git commit -a -m "Nom du commit"

# Historique et statut
git status
git log

# Cloner repository Github par url
git clone [url]

# Envoyer sur Github (push)
git push [nom-distant] [nom-branche]
git push origin master

# Récupérer modifications de Github (pull) 
git pull [nom-distant] [nom-branche]
git pull origin master



#########################
### Gérer les commits ###
#########################

# Se placer sur un commit donné
git checkout SHAducommit

# Créer un nouveau commit qui fait l'inverse
git revert SHAducommit

# Changer nom du commit
git commit --amend -m "Nouveau message"

# Ajouter nouveaux changements au précédent commit sans changer le nom
git commit --amend --no-edit

# Annuler changements depuis le commit en question
git reset --hard SHAducommit

# Look on which commit we currently are
git show -s


##########################
### Gérer les branches ###
##########################

# Checker les branches
git branch -a

# Créer nouvelle branche
git branch nouvelle-branche

# Se placer sur une branche
git checkout nouvelle-branche

# Merge une brancheB dans master
git checkout master
git merge brancheB


#########################
### Gérer les remotes ###
#########################

# Checker les remotes
git remote -v

# Ajouter un remote
git remote add [nom-court] [url]
git remote add jthanwer https://github.com/jthanwer/mementos.git

# Obtenir données manquantes du remote
git fetch [nom-court]
git fetch origin

# Changer remote
git remote set-url [nom-court] [url]
git remote set-url origin https://github.com/jthanwer/Memos.git 


##########################
### Gérer l'indexation ###
##########################

# Voir les fichiers indexés
git ls-files

# Enlever un fichier de l'index
git rm --cached [fichier]

# Supprimer un fichier totalement
git rm [fichier]

##############
### Rebase ###
##############

# Rebase une branche 'bug' sur la branche 'master'
git checkout bug
git rebase master

# Mettre ensuite master au commit le plus récent
git merge



